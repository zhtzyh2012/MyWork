
09:15 到公司
09:15-09:19 整理桌面卫生
09:20-09:36 组织Java部门早会内容
09:37-09:52 思考接口设计和开发,以及联调的问题
09:53-10:03 处理斌斌的转正申请内容
10:04-11:53 参与开放平台原型讨论
11:54-13:30 午休
13:31-13:52 分派小程序等框架创建任务
13:53-14:36 处理完成测试基础项目和图片项目
14:37-15:08 协助利阳查看发票申请列表查询的问题
15:10-15:20 协助云飞处理json格式化的问题
15:21-15:40 和云飞下楼透透气沟通下交流的问题
15:41-17:28 处理完成微信项目的保存拆分
17:29-18:48 讲解微服务中台和组织架构模型以及学习原则两个
18:49-19:30 查看上线完成后的订单修改乘待审核状态问题


今天任务安排
1.暂时没有任务安排处理
2.负责统筹项目的开发,那么开发中不再进行早会

1.思考接口设计和开发,以及联调的问题
2.参与开放平台原型讨论
3.分派小程序等框架创建任务
4.处理完成测试基础项目
5.处理完成测试图片项目
6.协助利阳查看发票申请列表查询的问题
7.和云飞下楼透透气沟通下交流的问题
8.处理完成微信项目的保存
9.查看上线完成后的订单修改乘待审核状态问题


技术管理:
    1.思考如果Java组有人负责其他项目,那么就不用参加部门早会,这样可以专注于业务开发管理处理的,减少不必要的时间浪费.昨晚看到篇文章,尽可能给别人方便,尽可能少的占用别人时间,增加有效占用,减少无效的时间浪费.
    2.关于接口设计给定,如果Java组接口参数很少,那么先设计出来接口,然后给调试接口的开发者,php或者客户端,同时接口参数的名称,如果是数据库字段对应的实体类,比如fuser_name那么就应该去掉首字母的驼峰命名法,userName,这样便于接口调用者的理解.其次如果接口参数过多,比如智能注册等订单,可能有20多个参数,那么即使接口设计出来,这么多参数,即使对业务非常熟悉,那么也会有非常多的沟通成本问题,开发的时候增加参数,修改参数,如果过于频繁,那么开发者和调用者的时间成本,沟通成本会是非常大的,所以个人建议开发者自己开发完成测试后,第二天接口调用者去联调开发测试的,这样可以减少非常多的沟通成本和时间成本的.
    如果接口调用者和开发者沟通协调,处理接口参数和返回值,那么就需要把各种场景都思考完毕后,然后去开发,开发过程中会存在变更,那么两者都要默认接受这种处理情况的.同时两者必须有足够的时间去沟通思考,不能单方面一方面很忙,那么就会变成上面的接口开发方式的,如果两方面都有时间可以尝试之前思考的这种处理方式.
    3.当初设计的发票申请的单表设计,今天查看发票列表的sql才知道我的设计彻底被开发所废弃掉了的,给我什么启发呢,对于这种违背设计初衷,不沟通不处理,我行我素,如果我有权力的话,我会直接开除掉的.我之所以单表设计,就是为了减少业务理解难度,对这块的业务能进行快速的迭代处理,这块然后又是重新开发处理的,理解业务难度又需要重新把商标订单业务的难度提高到需要全部了解的地步.现在这块的业务理解难度重新回到了原点,需要重新了解全部的商标注册业务内容.

反思总结:
    1.所谓的分产品线,其实就是具体的模块业务落实到某个人而已,这个和我认为的分产品线实在有比较多的出路啊,和之前其实没啥不同啊,你说有啥不同呢.责任更加落地,谁负责什么更加清晰明白而已.我认为在完成一件事情或小的时候,一定都会有非常的问题的,你的,我的,我们的,大家的,但是并不是有问题就压着藏着掖着,这个一定会在某个时刻把问题抛出来的,把问题抛出去处理解决,自己处理不了,可以让别人去处理.
